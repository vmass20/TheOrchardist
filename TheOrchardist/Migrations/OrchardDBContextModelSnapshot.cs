// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TheOrchardist.Data;

namespace TheOrchardist.Migrations
{
    [DbContext(typeof(OrchardDBContext))]
    partial class OrchardDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheOrchardist.Data.GlobalPlantList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<string>("FruitVariety")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Origin");

                    b.Property<string>("Use");

                    b.Property<string>("YearDeveloped");

                    b.HasKey("ID");

                    b.ToTable("GlobalPlantList");
                });

            modelBuilder.Entity("TheOrchardist.Data.Orchard", b =>
                {
                    b.Property<int>("OrchardID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("OrchardName")
                        .IsRequired();

                    b.Property<string>("UserID");

                    b.HasKey("OrchardID");

                    b.ToTable("Orchard");
                });

            modelBuilder.Entity("TheOrchardist.Data.UserPlantList", b =>
                {
                    b.Property<int>("OrchardID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActualHarvestDate");

                    b.Property<string>("Area");

                    b.Property<string>("Comments");

                    b.Property<DateTime>("DatePlanted");

                    b.Property<string>("FruitVariety")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("HarvestSeason");

                    b.Property<int>("ID");

                    b.Property<string>("Location");

                    b.Property<string>("MaintainedHeight");

                    b.Property<string>("MaintainedWidth");

                    b.Property<string>("Number");

                    b.Property<int?>("OrchardID1");

                    b.Property<string>("OrchardName");

                    b.Property<string>("Origin")
                        .HasMaxLength(200);

                    b.Property<string>("Parentage")
                        .HasMaxLength(200);

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Rootstock");

                    b.Property<string>("RootstockHeight");

                    b.Property<string>("RootstockWidth");

                    b.Property<string>("Section");

                    b.Property<int>("TreeCount");

                    b.Property<string>("Use");

                    b.Property<string>("UserID");

                    b.Property<string>("YearDeveloped");

                    b.HasKey("OrchardID");

                    b.HasIndex("OrchardID1");

                    b.ToTable("UserPlantList");
                });

            modelBuilder.Entity("TheOrchardist.Data.UserPlantList", b =>
                {
                    b.HasOne("TheOrchardist.Data.Orchard", "Orchard")
                        .WithMany("UserPlantLists")
                        .HasForeignKey("OrchardID1");
                });
#pragma warning restore 612, 618
        }
    }
}
